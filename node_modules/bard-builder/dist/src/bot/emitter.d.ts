import Session from "../bot/session";
import Message from "../gateway/message";
export declare enum EmitterEvents {
    ON_CREATE_SESSION = "on-create-session",
    ON_DELETE_SESSION = "on-delete-session",
    ON_EXPIRE_SESSION = "on-expire-session",
    ON_LOCK_SESSION = "on-lock-session",
    ON_UNLOCK_SESSION = "on-unlock-session",
    ON_REFRESH_SESSION = "on-refresh-session",
    ON_RECEIVE_MESSAGE = "on-receive-message",
    ON_SEND_MESSAGE = "on-send-message"
}
export interface ActionParams {
    session?: Session<ObjectLiteral>;
    message?: Message;
}
export type ActionFunction = (params: ActionParams) => void;
export default class Emitter {
    private events;
    constructor();
    set(event: EmitterEvents, action: ActionFunction): (Error | null);
    get(event: EmitterEvents): (ActionFunction[] | Error);
    execute(event: EmitterEvents, params: ActionParams): (Error | null);
}
