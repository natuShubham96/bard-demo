"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = __importDefault(require("crypto"));
class Hasher {
    constructor() {
    }
    create(length, safe = false) {
        if (safe) {
            const token = this.generate(Hasher.CHARACTER_SAFE, "sha512", length);
            if (!token)
                return false;
            return token.replace(/\+/gi, "-").replace(/\//gi, "_").replace(/=/gi, "o");
        }
        return this.generate(Hasher.CHARACTER_NORMAL, "sha512", length);
    }
    extract(data) {
        if (!data.length)
            return false;
        const hash = crypto_1.default.createHash("sha512");
        hash.update(data, "utf8");
        return hash.digest("base64");
    }
    generate(characters, code, length) {
        if (!(characters.length && code.length && length))
            return false;
        let uid = "";
        for (let i = 0; i < length; i++) {
            const index = Math.floor(Math.random() * characters.length);
            uid += characters[index];
        }
        if (!(uid && uid.length))
            return false;
        const hash = crypto_1.default.createHash(code);
        hash.update(uid, "utf8");
        return hash.digest("base64");
    }
}
Hasher.CHARACTER_NORMAL = "QWERTYUIOPASDFGHJKLÇZXCVBNMçabcdefghijklmnopqrstuvwxyz1234567890!@#$%&*()_-+=;:><.,?{}][";
Hasher.CHARACTER_SAFE = "QWERTYUIOPASDFGHJKLZXCVBNMabcdefghijklmnopqrstuvwxyz1234567890";
const hasher = new Hasher();
exports.default = hasher;
//# sourceMappingURL=hasher.js.map