import Session from "../bot/session";
import Flow from "./flow";
export declare enum CourseState {
    DEFAULT = "default",
    COMPLETED = "completed",
    OVERLOAD = "overload"
}
export default class Course {
    private static readonly MAX_STACK;
    private flow;
    private session;
    private current_node;
    private current_step;
    private detached_progress;
    private lifes;
    private lock;
    private current_flow_type;
    private state;
    constructor(flow: Flow, session: Session<ObjectLiteral>);
    run(): Promise<boolean>;
    private call;
    private trailing;
    private middleware;
    private setSessionProgress;
    next(): boolean;
    wait(): boolean;
    jump(step: number | string): boolean;
    skip(): boolean;
    again(): boolean;
    reset(): boolean;
    begin(name: string): boolean;
    replace(name: string, step?: number | string): boolean;
    end(): boolean;
}
